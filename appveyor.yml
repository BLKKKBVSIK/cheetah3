version: '{branch}-{build}'

cache:
  - '%LOCALAPPDATA%\pip\Cache'
    # Cache chocolatey-installed packages (PyPy)
  - C:\ProgramData\chocolatey\bin -> appveyor.yml, devscripts\CI\appveyor_install_pypy.cmd
  - C:\ProgramData\chocolatey\lib -> appveyor.yml, devscripts\CI\appveyor_install_pypy.cmd

# Match travis
clone_depth: 50

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C devscripts\\CI\\run_with_env.cmd"

  matrix:
    - TOXENV: "py27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python27"
    - TOXENV: "py27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python27-x64"
    - TOXENV: "py34"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python35"
      PYTHON34_HOME: "C:\\Python34"
    - TOXENV: "py34"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python35-x64"
      PYTHON34_HOME: "C:\\Python34-x64"
    - TOXENV: "py35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python35"
    - TOXENV: "py35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python35-x64"
    - TOXENV: "py36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python36"
    - TOXENV: "py36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python36-x64"
    - TOXENV: "py37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python37"
    - TOXENV: "py37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python37-x64"
    - TOXENV: "py38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python38"
    - TOXENV: "py38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python38-x64"
    - TOXENV: "py39"
      PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\Python39"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - TOXENV: "py39"
      PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "64"
      PYTHON_HOME: "C:\\Python39-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - TOXENV: "pypy"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      PYTHON_HOME: "C:\\ProgramData\\chocolatey\\lib\\python.pypy\\tools\\pypy2.7-v7.3.1-win32"

install:
  # Ensure we use the right python version
  - "SET PATH=%PYTHON_HOME%;%PYTHON_HOME%\\Scripts;%PATH%"
  - "SET PYTHON=%PYTHON_HOME%\\python.exe"
  - "SET TOXPYTHON=%PYTHON%"
  - if "%TOXENV%" == "py34" SET TOXPYTHON=%PYTHON34_HOME%\python.exe
  - if "%TOXENV%" == "pypy" devscripts\CI\appveyor_install_pypy.cmd
  - if "%TOXENV%" == "pypy" SET PYTHON=%PYTHON_HOME%\pypy.exe
  - if "%TOXENV%" == "pypy" SET TOXPYTHON=%PYTHON%
  - "%PYTHON% --version"
  - "%PYTHON% -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "%PYTHON% -m ensurepip"
  - "%PYTHON% -m pip install --upgrade \"pip<19.2\" \"setuptools<44\""
  - "%PYTHON% -m pip install --upgrade \"tox>=3.15\" ppu"
  - "%PYTHON% -m pip --version"

# No build step - _namemapper extension will be built under tox
build: false

test_script:
  - "%CMD_IN_ENV% %PYTHON% -m tox"

after_test:
  - remove-old-files.py -o 180 %LOCALAPPDATA%\pip\Cache

deploy_script:
  # If tests are successful and we've tested a tag, deploy binary wheel
  # TWINE_USERNAME / TWINE_PASSWORD / TWINE_REPOSITORY_URL
  # must be set in AppVeyor settings.
  - if "%APPVEYOR_REPO_TAG%" == "true" (
      if "%TOXENV%" == "py34" (
        %TOXPYTHON% -m pip install --upgrade "readme-renderer<25.0" "twine<2.0" "wheel==0.31.1"
      ) else (
        %TOXPYTHON% -m pip install --upgrade twine "wheel==0.34.1"
      ) &&
      %CMD_IN_ENV% %TOXPYTHON% setup.py bdist_wheel &&
      twine upload --skip-existing dist\*.whl
    )
